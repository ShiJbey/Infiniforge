{
  "compilerOptions": {
    "target": "es6",
    "resolveJsonModule": true,
    "strict":true,
    "lib": ["dom", "es6"],
    "outDir": "./build",
    "module": "commonjs",
    "moduleResolution": "node",
    "esModuleInterop": true,
    "declaration": true,
    "declarationMap": true,
    "importHelpers": true,
    "sourceMap": true,
    "removeComments": true
  },
  "include": [
    "src/**/*/"
  ],
  "compileOnSave": true
}
// {
//   "compilerOptions": {
//     /* Basic Options */
//     "module": "var",                             /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
//
//     // "allowJs": true,                          /* Allow javascript files to be compiled. */
//     // "checkJs": true,                          /* Report errors in .js files. */
//     "declaration": true,                         /* Generates corresponding '.d.ts' file. */
//     "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */
//     "sourceMap": true,                           /* Generates corresponding '.map' file. */
//     "outFile": "./build/infiniforge.js",      /* Concatenate and emit output to single file. */
//     //"outDir": "./build",                         /* Redirect output structure to the directory. */
//     "rootDir": "./src",                          /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
//     "composite": true,                           /* Enable project compilation */
//     "removeComments": true,                      /* Do not emit comments to output. */
//     "importHelpers": true,                       /* Import emit helpers from 'tslib'. */
//     "resolveJsonModule": true,

//     /* Strict Type-Checking Options */
//     "strict": true,                           /* Enable all strict type-checking options. */
//     "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
//     "strictNullChecks": true,              /* Enable strict null checks. */
//     "strictFunctionTypes": true,           /* Enable strict checking of function types. */
//     "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
//     "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
//     "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

//     /* Module Resolution Options */
//     "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
//     // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
//     // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
//     // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
//     // "types": [],                           /* Type declaration files to be included in compilation. */
//     "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
//     "esModuleInterop": true,                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

//     /* Source Map Options */
//     // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
//     // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
//     // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
//     // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
//   },
//   "files": [
//     "./src/json/cross-sections.json",
//     "./src/json/sword-templates.json"
//   ]
//   ,
//   "include": [
//     "./src/**/*",
//     "./src/json/cross-sections.json",
//     "./src/json/sword-templates.json"
//   ],
//   "compileOnSave": true
// }